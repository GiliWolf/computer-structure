
patchwork:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 2f 00 00 	mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <puts@plt-0x10>:
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <puts@plt>:
    1030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 4018 <puts@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <_init+0x20>

Disassembly of section .plt.got:

0000000000001040 <__cxa_finalize@plt>:
    1040:	ff 25 b2 2f 00 00    	jmpq   *0x2fb2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1046:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001050 <_start>:
    1050:	31 ed                	xor    %ebp,%ebp
    1052:	49 89 d1             	mov    %rdx,%r9
    1055:	5e                   	pop    %rsi
    1056:	48 89 e2             	mov    %rsp,%rdx
    1059:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    105d:	50                   	push   %rax
    105e:	54                   	push   %rsp
    105f:	45 31 c0             	xor    %r8d,%r8d
    1062:	31 c9                	xor    %ecx,%ecx
    1064:	48 8d 3d ce 00 00 00 	lea    0xce(%rip),%rdi        # 1139 <main>
    106b:	ff 15 67 2f 00 00    	callq  *0x2f67(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1071:	f4                   	hlt    
    1072:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1079:	00 00 00 
    107c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001080 <deregister_tm_clones>:
    1080:	48 8d 3d a9 2f 00 00 	lea    0x2fa9(%rip),%rdi        # 4030 <__TMC_END__>
    1087:	48 8d 05 a2 2f 00 00 	lea    0x2fa2(%rip),%rax        # 4030 <__TMC_END__>
    108e:	48 39 f8             	cmp    %rdi,%rax
    1091:	74 15                	je     10a8 <deregister_tm_clones+0x28>
    1093:	48 8b 05 46 2f 00 00 	mov    0x2f46(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    109a:	48 85 c0             	test   %rax,%rax
    109d:	74 09                	je     10a8 <deregister_tm_clones+0x28>
    109f:	ff e0                	jmpq   *%rax
    10a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10a8:	c3                   	retq   
    10a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010b0 <register_tm_clones>:
    10b0:	48 8d 3d 79 2f 00 00 	lea    0x2f79(%rip),%rdi        # 4030 <__TMC_END__>
    10b7:	48 8d 35 72 2f 00 00 	lea    0x2f72(%rip),%rsi        # 4030 <__TMC_END__>
    10be:	48 29 fe             	sub    %rdi,%rsi
    10c1:	48 89 f0             	mov    %rsi,%rax
    10c4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10c8:	48 c1 f8 03          	sar    $0x3,%rax
    10cc:	48 01 c6             	add    %rax,%rsi
    10cf:	48 d1 fe             	sar    %rsi
    10d2:	74 14                	je     10e8 <register_tm_clones+0x38>
    10d4:	48 8b 05 15 2f 00 00 	mov    0x2f15(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    10db:	48 85 c0             	test   %rax,%rax
    10de:	74 08                	je     10e8 <register_tm_clones+0x38>
    10e0:	ff e0                	jmpq   *%rax
    10e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10e8:	c3                   	retq   
    10e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010f0 <__do_global_dtors_aux>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	80 3d 35 2f 00 00 00 	cmpb   $0x0,0x2f35(%rip)        # 4030 <__TMC_END__>
    10fb:	75 2b                	jne    1128 <__do_global_dtors_aux+0x38>
    10fd:	55                   	push   %rbp
    10fe:	48 83 3d f2 2e 00 00 	cmpq   $0x0,0x2ef2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1105:	00 
    1106:	48 89 e5             	mov    %rsp,%rbp
    1109:	74 0c                	je     1117 <__do_global_dtors_aux+0x27>
    110b:	48 8b 3d 16 2f 00 00 	mov    0x2f16(%rip),%rdi        # 4028 <__dso_handle>
    1112:	e8 29 ff ff ff       	callq  1040 <__cxa_finalize@plt>
    1117:	e8 64 ff ff ff       	callq  1080 <deregister_tm_clones>
    111c:	c6 05 0d 2f 00 00 01 	movb   $0x1,0x2f0d(%rip)        # 4030 <__TMC_END__>
    1123:	5d                   	pop    %rbp
    1124:	c3                   	retq   
    1125:	0f 1f 00             	nopl   (%rax)
    1128:	c3                   	retq   
    1129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001130 <frame_dummy>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	e9 77 ff ff ff       	jmpq   10b0 <register_tm_clones>

0000000000001139 <main>:
    1139:	55                   	push   %rbp
    113a:	48 89 e5             	mov    %rsp,%rbp # intialize

    113d:	48 83 ec 10          	sub    $0x10,%rsp # add 16 bytes of space to stack
    1141:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp) # move 0 to the first 4 bytes

    1148:	48 8d 05 b9 0e 00 00 	lea    0xeb9(%rip),%rax        # 2008 <_IO_stdin_used+0x8>
    114f:	48 89 c7             	mov    %rax,%rdi
    1152:	e8 d9 fe ff ff       	callq  1030 <puts@plt> # print messge

    1157:	48 8d 05 da 0e 00 00 	lea    0xeda(%rip),%rax        # 2038 <_IO_stdin_used+0x38>
    115e:	48 89 c7             	mov    %rax,%rdi
    1161:	e8 ca fe ff ff       	callq  1030 <puts@plt> # print second message

    1166:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp) # check if the 
    116a:	74 0a                	je     1176 <main+0x3d>
    116c:	b8 00 00 00 00       	mov    $0x0,%eax
    1171:	e8 07 00 00 00       	callq  117d <give_flag>
    1176:	b8 00 00 00 00       	mov    $0x0,%eax
    117b:	c9                   	leaveq 
    117c:	c3                   	retq   

000000000000117d <give_flag>:
    117d:	55                   	push   %rbp
    117e:	48 89 e5             	mov    %rsp,%rbp
    1181:	48 83 ec 30          	sub    $0x30,%rsp
    1185:	48 b8 a0 93 a4 96 cb 	movabs $0x9dc59acb96a493a0,%rax
    118c:	9a c5 9d 
    118f:	48 ba c0 af c5 a0 af 	movabs $0xb4be84afa0c5afc0,%rdx
    1196:	84 be b4 
    1199:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    119d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    11a1:	48 b8 af b7 83 c4 af 	movabs $0xa780b4afc483b7af,%rax
    11a8:	b4 80 a7 
    11ab:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    11af:	66 c7 45 e8 be cd    	movw   $0xcdbe,-0x18(%rbp)
    11b5:	c6 45 ea 00          	movb   $0x0,-0x16(%rbp)
    11b9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    11bd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11c1:	eb 14                	jmp    11d7 <give_flag+0x5a>
    11c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    11c7:	48 8d 50 01          	lea    0x1(%rax),%rdx
    11cb:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    11cf:	0f b6 10             	movzbl (%rax),%edx
    11d2:	83 ea 50             	sub    $0x50,%edx
    11d5:	88 10                	mov    %dl,(%rax)
    11d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    11db:	0f b6 00             	movzbl (%rax),%eax
    11de:	84 c0                	test   %al,%al
    11e0:	75 e1                	jne    11c3 <give_flag+0x46>
    11e2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    11e6:	48 89 c7             	mov    %rax,%rdi
    11e9:	e8 42 fe ff ff       	callq  1030 <puts@plt>
    11ee:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    11f2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    11f6:	eb 14                	jmp    120c <give_flag+0x8f>
    11f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    11fc:	48 8d 50 01          	lea    0x1(%rax),%rdx
    1200:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    1204:	0f b6 10             	movzbl (%rax),%edx
    1207:	83 c2 50             	add    $0x50,%edx
    120a:	88 10                	mov    %dl,(%rax)
    120c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1210:	0f b6 00             	movzbl (%rax),%eax
    1213:	84 c0                	test   %al,%al
    1215:	75 e1                	jne    11f8 <give_flag+0x7b>
    1217:	90                   	nop
    1218:	c9                   	leaveq 
    1219:	c3                   	retq   

Disassembly of section .fini:

000000000000121c <_fini>:
    121c:	48 83 ec 08          	sub    $0x8,%rsp
    1220:	48 83 c4 08          	add    $0x8,%rsp
    1224:	c3                   	retq   
